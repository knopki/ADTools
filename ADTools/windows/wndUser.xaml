<Window x:Class="wndUser"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:local="clr-namespace:ADTools"
        mc:Ignorable="d"
        Title="{Binding name}" Height="467" Width="674.343" WindowStartupLocation="CenterOwner" ShowInTaskbar="False" Icon="/images/user.ico">
    <Window.Resources>
        <local:ConverterBooleanAnd x:Key="ConverterBooleanAnd" />
        <local:ConverterBooleanToVisibility x:Key="ConverterBooleanToVisibility" />
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tabctlUser" Margin="5">
            <TabItem Header="Основные сведения">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <DockPanel>
                        <StackPanel Margin="5,5,0,0">
                            <Border BorderThickness="1" Margin="0,0,0,5" BorderBrush="{DynamicResource ColorButtonBackground}">
                                <Image x:Name="imgPhoto" Source="{Binding thumbnailPhoto}" Width="150" Height="150"/>
                            </Border>
                            <Button x:Name="btnClearPhoto" Content="Очистить" Height="20" IsEnabled="{Binding CanWrite[thumbnailPhoto]}" Visibility="{Binding HasValue[thumbnailPhoto], Converter={StaticResource ConverterBooleanToVisibility}}"/>
                        </StackPanel>
                        <StackPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Имя" Width="130"/>
                                <TextBox x:Name="tbInitials" Width="50" Height="23" Text="{Binding initials}" DockPanel.Dock="Right" MaxLength="6" IsReadOnly="{Binding IsReadOnly[initials]}"/>
                                <TextBlock Text="Инициалы" Width="100" DockPanel.Dock="Right" Margin="5,0,0,0"/>
                                <TextBox x:Name="tbGivenName" Height="23" Text="{Binding givenName}" TabIndex="0"  MaxLength="64" IsReadOnly="{Binding IsReadOnly[givenName]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Фамилия" Width="130"/>
                                <TextBox x:Name="tbSN" Height="23" Text="{Binding sn}" MaxLength="64" IsReadOnly="{Binding IsReadOnly[sn]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Отображаемое имя" Width="130"/>
                                <TextBox Name="tbDisplayName" Height="24" Text="{Binding displayName}" MaxLength="256" IsReadOnly="{Binding IsReadOnly[displayName]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Описание" Width="130"/>
                                <TextBox Name="tbDescription" Height="23" Text="{Binding description}" MaxLength="1024" IsReadOnly="{Binding IsReadOnly[description]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Офис" Width="130"/>
                                <TextBox Name="tbPhysicalDeliveryOfficeName" Height="23" Text="{Binding physicalDeliveryOfficeName}" MaxLength="128" IsReadOnly="{Binding IsReadOnly[physicalDeliveryOfficeName]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Телефон" Width="130"/>
                                <ComboBox x:Name="сmboTelephoneNumber" Height="23" Text="{Binding telephoneNumber}" DisplayMemberPath="TelephoneNumber" IsEditable="True" IsDropDownOpen="False" IsEnabled="{Binding CanWrite[telephoneNumber]}">
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                        <Border Name="templateBorder" Padding="2" SnapsToDevicePixels="true">
                                                            <ContentPresenter>
                                                                <ContentPresenter.Content>
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition/>
                                                                            <ColumnDefinition/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <TextBlock Margin="5" Grid.Column="0" Text="{Binding Label}"/>
                                                                        <TextBlock Margin="5" Grid.Column="1" Text="{Binding TelephoneNumber}"/>
                                                                    </Grid>
                                                                </ContentPresenter.Content>
                                                            </ContentPresenter>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsHighlighted" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
                                                                <Setter TargetName="templateBorder" Property="Background" Value="{DynamicResource ColorButtonBackground}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Основной адрес" Width="130"/>
                                <TextBox Name="tbMail" Height="23" Text="{Binding mail}" MaxLength="256" IsReadOnly="{Binding IsReadOnly[mail]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Должность" Width="130"/>
                                <TextBox Name="tbTitle" Height="23" Text="{Binding title}" MaxLength="64" IsReadOnly="{Binding IsReadOnly[title]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Подразделение" Width="130"/>
                                <Button x:Name="btnResolveDepartment" Content="🔎" Height="23" Width="23" DockPanel.Dock="Right" ToolTip="Получить из названия контейнера" IsEnabled="{Binding CanWrite[department]}"/>
                                <TextBox Name="tbDepartment" Height="23" Text="{Binding department}" Margin="0,0,5,0" MaxLength="64" IsReadOnly="{Binding IsReadOnly[department]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Компания" Width="130"/>
                                <TextBox Name="tbCompany" Height="23" Text="{Binding company}" MaxLength="64" IsReadOnly="{Binding IsReadOnly[company]}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Руководитель" Width="130"/>
                                <TextBlock Height="23">
                                    <Hyperlink 
                                        NavigateUri="{Binding manager.displayName}"
                                        RequestNavigate="Manager_hyperlink_click">
                                        <TextBlock Text="{Binding manager.displayName}"/>
                                    </Hyperlink>
                                </TextBlock>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Учетная запись" Width="130"/>
                                <StackPanel Orientation="Horizontal" Height="23">
                                    <TextBlock Text="{Binding whenCreatedFormated}" ToolTip="Создан" Margin="0,0,10,0"/>
                                    <TextBlock Text="{Binding lastLogonFormated}" ToolTip="Последний вход" Margin="0,0,10,0"/>
                                    <TextBlock Text="{Binding accountExpiresFormated}" ToolTip="Объект истекает" Margin="0,0,10,0"/>
                                </StackPanel>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="5,5,5,0">
                                <TextBlock Text="Пароль" Width="130"/>
                                <StackPanel Orientation="Horizontal" Height="23">
                                    <TextBlock Text="{Binding pwdLastSetFormated}" ToolTip="Пароль изменен" Margin="0,0,10,0"/>
                                    <TextBlock Text="{Binding passwordExpiresFormated}" ToolTip="Пароль истекает" Margin="0,0,10,0"/>
                                </StackPanel>
                            </DockPanel>
                        </StackPanel>
                    </DockPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Объект">
                <DockPanel LastChildFill="True">
                    <StackPanel DockPanel.Dock="Top">
                        <DockPanel LastChildFill="True" Margin="5,5,5,0">
                            <TextBlock Text="Имя входа" Width="130"/>
                            <ComboBox x:Name="cmboUserPrincipalNameDomain" Height="23" Width="150" Text="{Binding userPrincipalNameDomain}" ItemsSource="{Binding Domain.Suffixes}" DockPanel.Dock="Right" IsEditable="True" IsEnabled="{Binding CanWrite[userPrincipalName]}"/>
                            <TextBox x:Name="tbUserPrincipalNameName" Height="23" Text="{Binding userPrincipalNameName}" MaxLength="256" BorderThickness="1,1,0,1" TabIndex="0" IsReadOnly="{Binding IsReadOnly[userPrincipalName]}"/>
                        </DockPanel>
                        <DockPanel LastChildFill="True" Margin="5,5,5,0">
                            <TextBlock Text="Имя входа (пред-Windows 2000)" Width="200"/>
                            <TextBox x:Name="tbSAMAccountName" Height="23" Text="{Binding sAMAccountName}" MaxLength="20" IsReadOnly="{Binding IsReadOnly[sAMAccountName]}"/>
                        </DockPanel>
                        <Grid Margin="0,15,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="33"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0">
                                <CheckBox x:Name="chbMustChangePasswordNextLogon" Content="Пользователь должен сменить пароль при следующем входе" Margin="5,5,5,0" IsChecked="{Binding userMustChangePasswordNextLogon}" IsEnabled="{Binding CanWrite[pwdLastSet]}"/>
                                <CheckBox x:Name="chbPasswordNeverExpires" Content="Срок действия пароля не ограничен" Margin="5,5,5,0" IsChecked="{Binding passwordNeverExpires}" IsEnabled="{Binding CanWrite[userAccountControl]}"/>
                                <CheckBox x:Name="chbAccountDisabled" Content="Учетная запись заблокирована" Margin="5,5,5,0" IsChecked="{Binding disabled}" IsEnabled="{Binding CanWrite[userAccountControl]}"/>
                            </StackPanel>
                            <StackPanel Grid.Column="1">
                                <Button x:Name="btnResetPassword" Content="🔑" Height="23" Width="23" Margin="5,5,5,0" ToolTip="Сбросить пароль на стандартный"/>
                                <Button x:Name="btnSetPassword" Content="🖊" Height="23" Width="23" Margin="5,5,5,0" ToolTip="Задать новый пароль"/>
                            </StackPanel>

                        </Grid>
                        <TextBlock Text="Срок действия учетной записи" Margin="5,20,5,0"/>
                        <DockPanel LastChildFill="True" Margin="5,5,5,0" IsEnabled="{Binding CanWrite[accountExpires]}">
                            <RadioButton x:Name="rbAccountNeverExpires" Content="Не ограничен" Margin="0,3,10,0" IsChecked="{Binding accountNeverExpires}"/>
                            <RadioButton x:Name="rbAccountExpiresAt" Content="Истекает" Margin="0,3,10,0" IsChecked="{Binding accountExpiresAt, Mode=OneWay}"/>
                            <!--<xctk:DateTimePicker x:Name="dtpStartTime" FormatString="dd.MM.yyyy HH:mm:ss dddd" IsEnabled="{Binding ElementName=rbAccountExpiresAt, Path=IsChecked}" Value="{Binding accountExpiresDate}" AutoCloseCalendar="True" Format="Custom" TimeFormat="LongTime" AllowTextInput="False" TextAlignment="Left"/>-->
                        </DockPanel>
                        <TextBlock Text="Разрешить вход на следующие рабочие станции" Margin="5,20,5,0"/>
                    </StackPanel>
                    <local:ctlUserWorkstations x:Name="ctlUserWorkstations" Margin="5" IsEnabled="{Binding CanWrite[userWorkstations]}"/>
                </DockPanel>
            </TabItem>
            <TabItem Header="Член групп">
                <local:ctlGroupMemberOf x:Name="ctlMemberOf"/>
            </TabItem>
            <TabItem x:Name="tabctlUserExchange" Header="Exchange">
                <Grid>
                    <local:ctlCap x:Name="capexchange" Panel.ZIndex="1" Visibility="Hidden"/>
                    <ScrollViewer VerticalScrollBarVisibility="Auto">

                        <DockPanel LastChildFill="True">

                            <DockPanel DockPanel.Dock="Right">
                                <TextBlock DockPanel.Dock="Bottom" x:Name="tblckState" TextAlignment="Center" Text="{Binding State}" Margin="0,0,0,10"></TextBlock>
                                <TextBlock DockPanel.Dock="Bottom" x:Name="tblckVersion" TextAlignment="Center" Text="{Binding VersionFormatted}"></TextBlock>
                                <TextBlock DockPanel.Dock="Bottom" TextAlignment="Center" Text="Exchange Server" Margin="0,10,0,0"></TextBlock>
                                <StackPanel Width="180">
                                    <Button x:Name="btnMailboxAdd" Content="&lt; Добавить адрес" Height="23" Margin="5,5,5,0">
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource ConverterBooleanAnd}">
                                                <Binding ElementName="tbMailbox" Path="Text.Length" />
                                                <Binding ElementName="cmboMailboxDomain" Path="SelectedItems.Count" />
                                            </MultiBinding>
                                        </Button.IsEnabled>
                                    </Button>
                                    <Button x:Name="btnMailboxEdit" Content="Изменить адрес" Height="23" Margin="5,5,5,0">
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource ConverterBooleanAnd}">
                                                <Binding ElementName="tbMailbox" Path="Text.Length" />
                                                <Binding ElementName="cmboMailboxDomain" Path="SelectedItems.Count" />
                                                <Binding ElementName="lvEmailAddresses" Path="SelectedItems.Count"  />
                                            </MultiBinding>
                                        </Button.IsEnabled>
                                    </Button>
                                    <Button x:Name="btnMailboxRemove" Content="Удалить адрес &gt;" Height="23" Margin="5,5,5,0" IsEnabled="{Binding ElementName=lvEmailAddresses, Path=SelectedItems.Count}"></Button>
                                    <Button x:Name="btnMailboxSetPrimary" Content="Сделать основным" Height="23" Margin="5,5,5,0" IsEnabled="{Binding ElementName=lvEmailAddresses, Path=SelectedItems.Count}"></Button>
                                    <Button x:Name="btnMailboxQuota" Content="Квоты..." Height="23" Margin="5,15,5,0" IsEnabled="{Binding Exist}"></Button>
                                    <CheckBox x:Name="chbMailboxHidden" Height="23" Margin="5,5,5,0" IsChecked="{Binding HiddenFromAddressListsEnabled}" IsEnabled="{Binding Exist, Mode=OneWay}" ToolTip="Показать/скрыть почтовый ящик в адресной книге">
                                        <CheckBox.Style>
                                            <Style TargetType="{x:Type CheckBox}">
                                                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type CheckBox}">
                                                            <ControlTemplate.Resources>
                                                                <Storyboard x:Key="OnChecking">
                                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="80"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                                <Storyboard x:Key="OnUnchecking">
                                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </ControlTemplate.Resources>

                                                            <DockPanel x:Name="dockPanel">
                                                                <Border BorderThickness="1" BorderBrush="{DynamicResource ColorButtonBackground}">
                                                                    <Grid Background="{DynamicResource ColorElementBackground}">
                                                                        <Border HorizontalAlignment="Left" x:Name="slider" Width="90" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" Background="{DynamicResource ColorButtonBackground}" BorderBrush="{DynamicResource ColorButtonBackground}">
                                                                            <Border.RenderTransform>
                                                                                <TransformGroup>
                                                                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                                                    <RotateTransform Angle="0"/>
                                                                                    <TranslateTransform X="0" Y="0"/>
                                                                                </TransformGroup>
                                                                            </Border.RenderTransform>
                                                                        </Border>

                                                                        <Grid x:Name="Overlay" Background="{DynamicResource ColorElementBackground}" Opacity="0"/>

                                                                        <TextBlock Text="Показать" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" />
                                                                        <TextBlock Text="Скрыть" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                                    </Grid>
                                                                </Border>

                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition GeneratedDuration="0:0:0.2" />
                                                                            <VisualTransition GeneratedDuration="0" To="Pressed" />
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Normal" />
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="Overlay" Storyboard.TargetProperty="(Grid.Opacity)" To="0.3"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                            </DockPanel>

                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                                                    </Trigger.ExitActions>
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                                                    </Trigger.EnterActions>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter TargetName="slider" Property="Background" Value="{DynamicResource ColorElementBackground}"/>
                                                                    <Setter TargetName="slider" Property="BorderThickness" Value="0"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                    <CheckBox x:Name="chbMailboxType" Height="23" Margin="5,5,5,0" IsChecked="{Binding Type}" IsEnabled="{Binding Exist, Mode=OneWay}" ToolTip="Конвертировать ящик в пользовательской/общий">
                                        <CheckBox.Style>
                                            <Style TargetType="{x:Type CheckBox}">
                                                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type CheckBox}">
                                                            <ControlTemplate.Resources>
                                                                <Storyboard x:Key="OnChecking">
                                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="80"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                                <Storyboard x:Key="OnUnchecking">
                                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </ControlTemplate.Resources>

                                                            <DockPanel x:Name="dockPanel">
                                                                <Border BorderThickness="1" BorderBrush="{DynamicResource ColorButtonBackground}">
                                                                    <Grid Background="{DynamicResource ColorElementBackground}">
                                                                        <Border HorizontalAlignment="Left" x:Name="slider" Width="90" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" Background="{DynamicResource ColorButtonBackground}" BorderBrush="{DynamicResource ColorButtonBackground}">
                                                                            <Border.RenderTransform>
                                                                                <TransformGroup>
                                                                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                                                    <RotateTransform Angle="0"/>
                                                                                    <TranslateTransform X="0" Y="0"/>
                                                                                </TransformGroup>
                                                                            </Border.RenderTransform>
                                                                        </Border>

                                                                        <Grid x:Name="Overlay" Background="{DynamicResource ColorElementBackground}" Opacity="0"/>

                                                                        <TextBlock Text="Пользоват." HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" />
                                                                        <TextBlock Text="Общий" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                                    </Grid>
                                                                </Border>

                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition GeneratedDuration="0:0:0.2" />
                                                                            <VisualTransition GeneratedDuration="0" To="Pressed" />
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Normal" />
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <DoubleAnimation Storyboard.TargetName="Overlay" Storyboard.TargetProperty="(Grid.Opacity)" To="0.3"/>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                            </DockPanel>

                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                                                    </Trigger.ExitActions>
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                                                    </Trigger.EnterActions>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter TargetName="slider" Property="Background" Value="{DynamicResource ColorElementBackground}"/>
                                                                    <Setter TargetName="slider" Property="BorderThickness" Value="0"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                    <Button x:Name="btnMailboxShare" Content="Общий доступ" Height="23" Margin="5,5,5,0" IsEnabled="{Binding Exist}"></Button>
                                </StackPanel>
                            </DockPanel>
                            <DockPanel LastChildFill="True">
                                <DockPanel DockPanel.Dock="Top" Margin="5,5,5,0">
                                    <ComboBox x:Name="cmboMailboxDomain" ItemsSource="{Binding AcceptedDomain, Mode=OneWay}" Height="23" Width="150" DockPanel.Dock="Right"/>
                                    <TextBox x:Name="tbMailbox" Height="23" MaxLength="128" BorderThickness="1,1,0,1" TabIndex="0" />
                                </DockPanel>
                                <DockPanel DockPanel.Dock="Bottom">
                                    <Grid Height="23" Margin="5,5,5,5">
                                        <ProgressBar x:Name="pbMailboxSpace" Value="{Binding Size, Mode=OneWay}" Maximum="{Binding CurrentProhibitSendQuota, Mode=OneWay}"  Background="{x:Null}" ToolTip="size"></ProgressBar>
                                        <TextBlock x:Name="tblckMailboxSpace" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,5,0">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}занято {0}, квота {1}">
                                                    <Binding Path="SizeFormatted" Mode="OneWay"/>
                                                    <Binding Path="CurrentProhibitSendQuotaFormatted" Mode="OneWay"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Grid>
                                </DockPanel>
                                <ListView x:Name="lvEmailAddresses" AlternationCount="2" Margin="5,5,5,0" ItemsSource="{Binding EmailAddresses}">
                                    <ListView.View>
                                        <GridView AllowsColumnReorder="False">
                                            <GridView.Columns>
                                                <GridViewColumn Header="Почтовый адрес" Width="410">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <DockPanel>
                                                                <TextBlock TextWrapping="Wrap" Text="{Binding Address}">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Setter Property="Foreground" Value="{DynamicResource ColorText}" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsPrimary}" Value="True">
                                                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </DockPanel>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                            </GridView.Columns>
                                        </GridView>
                                    </ListView.View>
                                </ListView>

                            </DockPanel>

                        </DockPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem Header="Все атрибуты">
                <local:ctlObjectAttributes x:Name="ctlAttributes" Margin="5"/>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
